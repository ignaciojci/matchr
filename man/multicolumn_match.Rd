% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multicolumn_match.R
\name{multicolumn_match}
\alias{multicolumn_match}
\title{Match Rows Across Multiple Columns in Two Data Frames}
\usage{
multicolumn_match(x, xcols, y, ycols)
}
\arguments{
\item{x}{The "left" data frame (the data frame to be matched from).}

\item{xcols}{A character vector of column names in \code{x} to use for matching.}

\item{y}{The "right" data frame (the data frame to be matched against).}

\item{ycols}{A character vector of column names in \code{y} to use for matching.}
}
\value{
A numeric vector of row indices from \code{y} that correspond to the
first match for each row in \code{x}. If no match is found for a row in \code{x},
the corresponding element in the returned vector will be \code{NA}.
}
\description{
This function performs a multi-column matching operation between two data
frames (\code{x} and \code{y}). It normalizes and flattens specified columns from
both data frames and then finds the \emph{first} matching row in \code{y} for each
row in \code{x} based on the normalized names.
}
\examples{
\dontrun{
# Assuming 'df1' and 'df2' are your data frames
# and 'df1_gene_cols', 'df2_gene_cols' are the relevant column names
# match_indices <- multicolumn_match(df1, df1_gene_cols, df2, df2_gene_cols)
}
}
